name: Build and Push to Docker Hub

# This workflow runs on pushes to the main branch and when a new version tag is pushed.
# It builds a Docker image and pushes it to Docker Hub.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    # Use the latest version of Ubuntu for the runner.
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out your repository's code.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx for advanced build capabilities.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub using secrets.
      # This step is skipped for pull requests as we only build, not push.
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Generate tags and labels for the Docker image.
      # This action is more robust for creating tags. It's configured here
      # to create tags based on the commit SHA and the run number,
      # and it will automatically add the 'latest' tag on pushes to the main branch.
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            # Create a tag with the git commit SHA
            type=sha,prefix=
            # Create a tag with the GitHub run number
            type=raw,value=${{ github.run_number }}
            # Create the 'latest' tag on pushes to the default branch (e.g., main)
            type=raw,value=latest,enable={{is_default_branch}}

      # Step 5: Build the Docker image and push it to Docker Hub.
      # The 'push' parameter is conditional. It's 'true' only for pushes to a branch,
      # but 'false' for pull requests, which only builds the image for validation.
      # The tags and labels from the 'meta' step are used here.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # This line ensures we only push on 'push' events, not 'pull_request'
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Enable caching to speed up future builds.
          cache-from: type=gha
          cache-to: type=gha,mode=max
          